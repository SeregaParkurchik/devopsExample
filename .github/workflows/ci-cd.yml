name: CI/CD Pipeline - Yandex Cloud

on:
  push:
    branches: [ main ]

env:
  REGISTRY: cr.yandex
  YC_REGISTRY_ID: crpc7r4jjthonh572883

jobs:
  test-backend-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build Go binary
        run: |
          cd backend-go
          go build -o app .

  test-frontend-next:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build Frontend
        run: |
          cd frontend-next
          npm ci
          npm run build

  build-and-push-to-yandex:
    runs-on: ubuntu-latest
    needs: [test-backend-go, test-frontend-next]
    steps:
      - uses: actions/checkout@v4
      
      - name: Create JSON key file
        run: |
          echo '${{ secrets.YC_DOCKER_PASSWORD }}' > key.json
          cat key.json | jq . 2>/dev/null && echo "✅ JSON valid" || echo "❌ JSON invalid"
      
      - name: Log in to Yandex Container Registry
        run: |
          cat key.json | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex
      
      - name: Build and push Backend
        run: |
          cd backend-go
          docker build -t cr.yandex/${{ env.YC_REGISTRY_ID }}/backend-go:${{ github.sha }} .
          docker push cr.yandex/${{ env.YC_REGISTRY_ID }}/backend-go:${{ github.sha }}
      
      - name: Build and push Frontend
        run: |
          cd frontend-next
          docker build -t cr.yandex/${{ env.YC_REGISTRY_ID }}/frontend-next:${{ github.sha }} .
          docker push cr.yandex/${{ env.YC_REGISTRY_ID }}/frontend-next:${{ github.sha }}

  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs: [build-and-push-to-yandex]
    steps:
      - uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.YC_KUBECONFIG }}' > ~/.kube/config
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/backend-go backend-go=cr.yandex/${{ env.YC_REGISTRY_ID }}/backend-go:${{ github.sha }} --record
          kubectl set image deployment/frontend-next frontend-next=cr.yandex/${{ env.YC_REGISTRY_ID }}/frontend-next:${{ github.sha }} --record
          kubectl rollout status deployment/backend-go --timeout=300s
          kubectl rollout status deployment/frontend-next --timeout=300s

  health-check:
    runs-on: ubuntu-latest
    needs: [deploy-to-k8s]
    steps:
      - name: Verify deployment
        run: |
          echo "🎉 CI/CD Pipeline Completed!"
          echo "🚀 Applications deployed successfully"
