name: CI/CD Pipeline - Yandex Cloud

on:
  push:
    branches: [ main ]

env:
  REGISTRY: cr.yandex
  YC_REGISTRY_ID: crpc7r4jjthonh572883

jobs:
  build-and-push-to-yandex:
    runs-on: ubuntu-latest  # ← Используем AMD64 runner!
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64  # ← Собираем для AMD64!
      
      - name: Log in to Yandex Container Registry
        run: |
          echo '${{ secrets.YC_OAUTH_TOKEN }}' | docker login \
            --username oauth \
            --password-stdin \
            cr.yandex
      
      - name: Build and push Backend for AMD64
        uses: docker/build-push-action@v5
        with:
          context: ./backend-go
          platforms: linux/amd64
          push: true
          tags: |
            cr.yandex/${{ env.YC_REGISTRY_ID }}/backend-go:${{ github.sha }}
            cr.yandex/${{ env.YC_REGISTRY_ID }}/backend-go:latest
      
      - name: Build and push Frontend for AMD64
        uses: docker/build-push-action@v5
        with:
          context: ./frontend-next
          platforms: linux/amd64
          push: true
          tags: |
            cr.yandex/${{ env.YC_REGISTRY_ID }}/frontend-next:${{ github.sha }}
            cr.yandex/${{ env.YC_REGISTRY_ID }}/frontend-next:latest

  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs: [build-and-push-to-yandex]
    steps:
      - uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.YC_KUBECONFIG }}' > ~/.kube/config
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/backend-go backend-go=cr.yandex/${{ env.YC_REGISTRY_ID }}/backend-go:${{ github.sha }} --record
          kubectl set image deployment/frontend-next frontend-next=cr.yandex/${{ env.YC_REGISTRY_ID }}/frontend-next:${{ github.sha }} --record
          kubectl rollout status deployment/backend-go --timeout=300s
          kubectl rollout status deployment/frontend-next --timeout=300s

  health-check:
    runs-on: ubuntu-latest
    needs: [deploy-to-k8s]
    steps:
      - name: Verify deployment
        run: |
          echo "🎉 CI/CD Pipeline Completed!"
          echo "📦 AMD64 images pushed to Yandex Container Registry"
          echo "🚀 Applications deployed to Kubernetes"
